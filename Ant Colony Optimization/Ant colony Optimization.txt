FUNCTION ACO_TSP(cities, num_ants, alpha, beta, rho, iterations):
    // Step 1: Initialize pheromone trails
    pheromone_matrix = Initialize_Pheromone_Matrix(cities, initial_pheromone_value)
    best_tour_length = infinity
    best_tour = null

    FOR iteration FROM 1 TO iterations:
        // Step 2: Construct solutions
        all_tours = []
        all_tour_lengths = []
        FOR ant_id FROM 1 TO num_ants:
            current_tour = []
            visited_cities = Set()
            
            // Start at a random city
            current_city = Randomly_Select_City(cities)
            current_tour.add(current_city)
            visited_cities.add(current_city)

            WHILE visited_cities.size() < cities.size():
                next_city = Probabilistically_Select_Next_City(current_city, visited_cities, pheromone_matrix, distances_matrix, alpha, beta)
                current_tour.add(next_city)
                visited_cities.add(next_city)
                current_city = next_city

            // Complete the tour by returning to the start city
            current_tour.add(current_tour[0])
            
            tour_length = Calculate_Tour_Length(current_tour, distances_matrix)
            all_tours.add(current_tour)
            all_tour_lengths.add(tour_length)

        // Step 3: Update pheromone trails
        // Pheromone evaporation
        pheromone_matrix = pheromone_matrix * (1 - rho)

        // Pheromone deposition
        FOR i FROM 0 TO num_ants - 1:
            tour = all_tours[i]
            tour_length = all_tour_lengths[i]
            
            // Deposit pheromone on the edges of the tour
            delta_pheromone = 1 / tour_length
            FOR edge FROM 0 TO tour.size() - 2:
                city1 = tour[edge]
                city2 = tour[edge + 1]
                pheromone_matrix[city1][city2] = pheromone_matrix[city1][city2] + delta_pheromone
                pheromone_matrix[city2][city1] = pheromone_matrix[city2][city1] + delta_pheromone
        
        // Step 4: Update best solution
        current_best_tour_length = MIN(all_tour_lengths)
        IF current_best_tour_length < best_tour_length:
            best_tour_length = current_best_tour_length
            best_tour = all_tours[all_tour_lengths.indexOf(current_best_tour_length)]

    RETURN best_tour, best_tour_length